---
# Install an APT proxy server for use with the rest of this role
- name: 'Install software'
  ansible.builtin.apt:
    name: 'squid-deb-proxy'
    state: 'present'
    update_cache: true

- name: 'Ensure configuration'
  ansible.builtin.template:
    dest: '/etc/squid-deb-proxy/squid-deb-proxy.conf'
    src: 'squid-deb-proxy.conf.j2'
    mode: '0644'
    owner: 'root'
    group: 'root'

- name: 'Ensure cache directory'
  ansible.builtin.file:
    path: "{{ apt_proxy_cache_dir }}"
    state: 'directory'
    owner: 'proxy'
    group: 'proxy'
    mode: '0755'
  notify: 'Generate squid cache'

- name: 'Flush handlers'
  ansible.builtin.meta: 'flush_handlers'

- name: 'Enable service'
  ansible.builtin.service:
    name: 'squid-deb-proxy'
    state: 'started'
    enabled: true

- name: 'Ensure domain whitelist'
  ansible.builtin.template:
    src: 'domain-whitelist.acl.j2'
    dest: '/etc/squid-deb-proxy/mirror-dstdomain.acl.d/10-managed'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: 'Reload squid'

- name: 'Ensure package blacklist'
  ansible.builtin.template:
    src: 'package-blacklist.j2'
    dest: '/etc/squid-deb-proxy/pkg-blacklist.d/10-managed'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: 'Reload squid'

- name: 'Ensure allowed networks'
  ansible.builtin.template:
    src: 'allowed-networks.j2'
    dest: '/etc/squid-deb-proxy/allowed-networks-src.acl.d'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: 'Reload squid'

- name: 'Flush handlers'
  ansible.builtin.meta: 'flush_handlers'
