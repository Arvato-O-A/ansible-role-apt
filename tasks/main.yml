---
- name: 'Set up proxy server'
  ansible.builtin.include_tasks: 'proxy_server.yml'
  when: apt_is_proxy_server

# Configure repositories, keys and automatic upgrades
- name: 'Merge repo_keys_keyserver (requires Ansible Merge Vars)'
  merge_vars:
    suffix_to_merge: '_apt_repo_keys_keyserver__to_merge'
    merged_var_name: 'apt_repo_keys_keyserver'
    expected_type: 'list'

- name: 'Merge repo_keys_url (requires Ansible Merge Vars)'
  merge_vars:
    suffix_to_merge: '_apt_repo_keys_url__to_merge'
    merged_var_name: 'apt_repo_keys_url'
    expected_type: 'list'

- name: 'Merge other_repos (requires Ansible Merge Vars)'
  merge_vars:
    suffix_to_merge: 'apt_other_repos__to_merge'
    merged_var_name: 'apt_other_repos'
    expected_type: 'list'

- name: 'Merge apt_proxy_direct (requires Ansible Merge Vars)'
  merge_vars:
    suffix_to_merge: 'apt_proxy_direct__to_merge'
    merged_var_name: 'apt_proxy_direct'
    expected_type: 'list'

- name: 'Configure APT'
  ansible.builtin.template:
    src: "{{ file['src'] }}"
    dest: "{{ file['dest'] }}"
    owner: 'root'
    group: 'root'
    mode: '0644'
  loop:
    - src: 'apt-periodic.j2'
      dest: '/etc/apt/apt.conf.d/10periodic'
    - src: 'apt-unattended.j2'
      dest: '/etc/apt/apt.conf.d/50unattended-upgrades'
    - src: 'apt-proxy.j2'
      dest: '/etc/apt/apt.conf.d/01proxy'
  loop_control:
    loop_var: 'file'

- name: 'Configure Debian main repos'
  ansible.builtin.copy:
    content: |
      # This file is managed by Ansible.
      # YOUR CHANGES WILL BE LOST!
      {% for deb_repo in deb_repos %}
      {% if not deb_repo['skip'] %}
      deb {{ debian_repo_mirror }}/{{ deb_repo['distro'] }} {{ deb_repo['release'] }} {{ debian_repo_components }}
      {% endif %}
      {% endfor %}
    dest: '/etc/apt/sources.list.d/debian.list'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: 'Update apt cache'
  vars:
    deb_repos:
      - distro: 'debian'
        release: "{{ ansible_facts['distribution_release'] }}"
        skip: false
      - distro: 'debian'
        release: "{{ ansible_facts['distribution_release'] }}-updates"
        skip: "{{ debian_testing }}"
      - distro: 'debian-security'
        release: "{{ ansible_facts['distribution_release'] }}-security"
        skip: "{{ (ansible_facts['distribution_major_version'] >= '11') | ternary(debian_testing, true) }}"
      - distro: 'debian-security'
        release: "{{ ansible_facts['distribution_release'] }}/updates"
        skip: "{{ (ansible_facts['distribution_major_version'] <= '10') | ternary(debian_testing, true) }}"
      - distro: 'debian'
        release: "{{ ansible_facts['distribution_release'] + '-backports' }}"
        skip: "{{ not debian_backports_enabled }}"
  when:
    - ansible_facts['distribution'] == "Debian"
    - not is_raspbian

- name: 'Configure Raspbian main repos'
  ansible.builtin.copy:
    content: |
      # This file is managed by Ansible.
      # YOUR CHANGES WILL BE LOST!
      {% for rasp_repo in rasp_repos %}
      {% if not rasp_repo['skip'] %}
      deb {{ raspbian_repo_mirror }}/{{ rasp_repo['distro'] }} {{ rasp_repo['release'] }} {{ raspbian_repo_components }}
      {% endif %}
      {% endfor %}
    dest: '/etc/apt/sources.list.d/raspbian.list'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: 'Update apt cache'
  vars:
    rasp_repos:
      - distro: 'raspbian'
        release: "{{ ansible_facts['distribution_release'] }}"
        skip: false
  when:
    - ansible_facts['distribution'] == "Debian"
    - is_raspbian

- name: 'Configure Ubuntu main repos'
  ansible.builtin.copy:
    content: |
      # This file is managed by Ansible.
      # YOUR CHANGES WILL BE LOST!
      {% for ubt_repo in ubt_repos %}
      deb {{ ubuntu_repo_mirror }} {{ ubt_repo }} {{ ubuntu_repo_components }}
      {% endfor %}
    dest: '/etc/apt/sources.list.d/ubuntu.list'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: 'Update apt cache'
  vars:
    ubt_repos:
      - "{{ ansible_facts['distribution_release'] }}"
      - "{{ ansible_facts['distribution_release'] }}-updates"
      - "{{ ansible_facts['distribution_release'] }}-security"
  when: ansible_facts['distribution'] == "Ubuntu"

- name: 'Install supporting packages'
  ansible.builtin.apt:
    name:
      - 'dirmngr'
      - 'unattended-upgrades'
      - 'curl'
    state: 'present'
    update_cache: true

  # Rather clunky workaround, but the apt_key module does not
  # support proxies yet: https://github.com/ansible/ansible/issues/31691
- name: 'Configure repo keys from keyserver'
  ansible.builtin.apt_key:
    data: "{{ lookup('url', 'http://' + repository_keyserver + '/pks/lookup?op=get&search=0x' + keyserver_key['keyid'], split_lines=False) }}"
  environment:
    http_proxy: "{{ apt_proxy_url | default(omit) }}"
    https_proxy: "{{ apt_proxy_url | default(omit) }}"
  loop: "{{ apt_repo_keys_keyserver | default([]) }}"
  loop_control:
    loop_var: 'keyserver_key'
  when: apt_repo_keys_keyserver | length > 0

- name: 'Configure repo keys from URLs'
  ansible.builtin.apt_key:
    data: "{{ lookup('url', url_key['url'], split_lines=False) }}"
  environment:
    http_proxy: "{{ apt_proxy_url | default(omit) }}"
    https_proxy: "{{ apt_proxy_url | default(omit) }}"
  loop: "{{ apt_repo_keys_url | default([]) }}"
  loop_control:
    loop_var: 'url_key'
  when: apt_repo_keys_url | length > 0

- name: 'Configure other repos'
  ansible.builtin.copy:
    content: |
      # This file is managed by Ansible.
      # YOUR CHANGES WILL BE LOST!
      deb {{ repo['url'] }} {{ repo['release'] }} {{ repo['repos'] }}
    dest: "/etc/apt/sources.list.d/{{ repo['name'] }}.list"
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: 'Update apt cache'
  loop: "{{ apt_other_repos | default([]) }}"
  loop_control:
    loop_var: 'repo'
  when: apt_other_repos | length > 0

- name: 'Clean up default sources'
  ansible.builtin.template:
    src: 'sources.list.j2'
    dest: '/etc/apt/sources.list'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Disable apt-listchanges'
  ansible.builtin.apt:
    name: 'apt-listchanges'
    state: 'absent'
    purge: true
  when: not apt_listchanges_installed

- name: 'Enable apt-listchanges'
  ansible.builtin.apt:
    name: 'apt-listchanges'
    state: 'present'
  when: apt_listchanges_installed
