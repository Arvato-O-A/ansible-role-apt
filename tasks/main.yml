---
# Configure repositories, keys and automatic upgrades
- name: 'Merge repo_keys_keyserver (requires Ansible Merge Vars)'
  merge_vars:
    suffix_to_merge: '_apt_repo_keys_keyserver__to_merge'
    merged_var_name: 'apt_repo_keys_keyserver'
    expected_type: 'list'

- name: 'Merge repo_keys_url (requires Ansible Merge Vars)'
  merge_vars:
    suffix_to_merge: '_apt_repo_keys_url__to_merge'
    merged_var_name: 'apt_repo_keys_url'
    expected_type: 'list'

- name: 'Merge other_repos (requires Ansible Merge Vars)'
  merge_vars:
    suffix_to_merge: 'apt_other_repos__to_merge'
    merged_var_name: 'apt_other_repos'
    expected_type: 'list'

- name: 'Configure APT'
  template:
    src: "{{ file.src }}"
    dest: "{{ file.dest }}"
  loop:
    - { src: 'apt-periodic.j2', dest: '/etc/apt/apt.conf.d/10periodic' }
    - { src: 'apt-unattended.j2', dest: '/etc/apt/apt.conf.d/50unattended-upgrades' }
    - { src: 'apt-proxy.j2', dest: '/etc/apt/apt.conf.d/01proxy' }
  loop_control:
    loop_var: 'file'

- name: 'Configure Debian main repos'
  apt_repository:
    repo: "deb {{ debian_repo_mirror }}/{{ deb_repo.distro }} {{ deb_repo.release }} main contrib non-free"
    filename: 'debian'
  loop:
    - { distro: 'debian', release: '{{ ansible_distribution_release }}' }
    - { distro: 'debian', release: '{{ ansible_distribution_release }}-updates' }
    - { distro: 'debian-security', release: '{{ ansible_distribution_release }}/updates' }
  loop_control:
    loop_var: 'deb_repo'
  when: ansible_distribution == "Debian"

- name: 'Configure Ubuntu main repos'
  apt_repository:
    repo: "deb {{ ubuntu_repo_mirror }} {{ ubt_repo }} main restricted universe multiverse"
    filename: 'ubuntu'
  loop:
    - "{{ ansible_distribution_release }}"
    - "{{ ansible_distribution_release }}-updates"
    - "{{ ansible_distribution_release }}-security"
  loop_control:
    loop_var: 'ubt_repo'
  when: ansible_distribution == "Ubuntu"

- name: 'Clean up default sources'
  template:
    src: 'sources.list.j2'
    dest: '/etc/apt/sources.list'

- name: 'Install supporting packages'
  apt:
    name:
      - 'apt-transport-https'
      - 'dirmngr'
      - 'unattended-upgrades'
      - 'curl'
    state: 'present'

  # Rather clunky workaround, but the apt_key module does not
  # support proxies yet: https://github.com/ansible/ansible/issues/31691
- name: 'Configure repo keys from keyserver'
  apt_key:
    data: "{{ lookup('url', 'http://{{ repository_keyserver }}/pks/lookup?op=get&search=0x{{ keyserver_key.keyid }}', split_lines=False) }}"
  environment:
    HTTP_PROXY: "{{ apt_proxy_url }}"
    HTTPS_PROXY: "{{ apt_proxy_url }}"
  loop: "{{ apt_repo_keys_keyserver|default([]) }}"
  loop_control:
    loop_var: 'keyserver_key'
  when: apt_repo_keys_keyserver | length > 0

- name: 'Configure repo keys from URLs'
  apt_key:
    data: "{{ lookup('url', '{{ url_key.url }}', split_lines=False) }}"
  environment:
    HTTP_PROXY: "{{ apt_proxy_url }}"
    HTTPS_PROXY: "{{ apt_proxy_url }}"
  loop: "{{ apt_repo_keys_url|default([]) }}"
  loop_control:
    loop_var: 'url_key'
  when: apt_repo_keys_url | length > 0

- name: 'Configure other repos'
  apt_repository:
    repo: "deb {{ repo.url }} {{ repo.release }} {{ repo.repos }}"
    filename: "{{ repo.name }}"
  loop: "{{ apt_other_repos|default([]) }}"
  loop_control:
    loop_var: 'repo'
  when: apt_other_repos | length > 0
